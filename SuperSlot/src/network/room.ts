//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
/// Generated from: room.proto
/// <reference path="lobby.ts" />

module Cmd {
	export enum Room_Status {
		/**
		 * 下注
		 */
		GAME_STATUS_BET = 1,
		/**
		 * 开奖
		 */
		GAME_STATUS_LTY = 2
	}
	/**
	 * 系统开奖信息
	 */
	export class LotteryInfo {
		/**
		 * 开牌
		 */
		cardid: number;
		/**
		 * 开启特殊玩法时存放的id
		 */
		specialcardid: number[];
		/**
		 * 1小三元,2大三元,3大四喜
		 */
		bluetype: number;
		GetType(): string { return 'Cmd.LotteryInfo'; }
	}
	export class Baseid {
		/**
		 * 特殊开牌
		 */
		caidid: number;
		GetType(): string { return 'Cmd.Baseid'; }
	}
	/**
	 * 大小开奖信息
	 */
	export class SizeInfo {
		/**
		 * 大小
		 */
		sizeid: number;
		GetType(): string { return 'Cmd.SizeInfo'; }
	}
	export class LotteryNbr {
		/**
		 * 开奖类型
		 */
		lotteryid: number;
		/**
		 * 局数
		 */
		number: number;
		GetType(): string { return 'Cmd.LotteryNbr'; }
	}
	/**
	 * 所有玩家赢得筹码信息
	 */
	export class LotteryUser {
		/**
		 * 玩家uid
		 */
		uid: number;
		/**
		 * 玩家昵称
		 */
		nickName: string;
		/**
		 * 玩家坐位 如果为0则为站位玩家
		 */
		seatindex: number;
		/**
		 * 开奖后对应玩家所剩筹码
		 */
		remainder: number;
		/**
		 * 本局玩家输赢
		 */
		profit: number;
		/**
		 * 本局下注总数
		 */
		betall: number;
		GetType(): string { return 'Cmd.LotteryUser'; }
	}
	/**
	 * 下注基本信息
	 */
	export class Betbase {
		/**
		 * id
		 */
		betid: number;
		chips: number;
		GetType(): string { return 'Cmd.Betbase'; }
	}
	/**
	 * 特殊奖励信息
	 */
	export class winbase {
		id: number;
		chips: number;
		GetType(): string { return 'Cmd.winbase'; }
	}
	/**
	 * 房间内玩家基本信息
	 */
	export class RoomStatusInfo {
		/**
		 * 游戏状态
		 */
		roomstatus: Room_Status;
		/**
		 * 剩余时间
		 */
		remaindertime: number;
		GetType(): string { return 'Cmd.RoomStatusInfo'; }
	}
	// export class RoomUserInfo {
	// 	uid: number;
	// 	headurl: string;
	// 	/**
	// 	 * 昵称
	// 	 */
	// 	nickname: string;
	// 	/**
	// 	 * 如果为0就是站着
	// 	 */
	// 	seatid: number;
	// 	/**
	// 	 * 玩家当前筹码
	// 	 */
	// 	remainder: number;
	// 	/**
	// 	 * 玩家本局已下注信息
	// 	 */
	// 	userbet: Betbase[];
	// 	GetType(): string { return 'Cmd.RoomUserInfo'; }
	// }
	/**
	 * 下注信息回复
	 */
	export class BetReturnInfo {
		/**
		 * 用户ID
		 */
		uid: number;
		/**
		 * 本次下注信息
		 */
		betinfo: Betbase[];
		/**
		 * 房间当前下注位置 房间总的下注信息
		 */
		roombet: Betbase[];
		/**
		 * 房间当前下注位置 玩家本局共下注信息
		 */
		userbet: Betbase[];
		/**
		 * 下注后剩余筹码
		 */
		remainder: number;
		/**
		 * 座位id
		 */
		seatid: number;
		GetType(): string { return 'Cmd.BetReturnInfo'; }
	}
	export class BankerUserInfo {
		/**
		 * uid, 如果是0表示是系统
		 */
		uid: number;
		headurl: string;
		/**
		 * 昵称
		 */
		nickname: string;
		/**
		 * 上庄筹码
		 */
		bankerchips: number;
		/**
		 * 已上庄局数
		 */
		bebankernum: number;
		/**
		 * 排队次序
		 */
		bankerindex: number;
		GetType(): string { return 'Cmd.BankerUserInfo'; }
	}
	/**
	 * ---------------------------------消息协议---------------------------------------//
	 *  进入游戏
	 */
	export class RoomEnterRoomCmd_C {
		/**
		 * 房间类型
		 */
		roomtype: number;
		/**
		 * 房间id
		 */
		deskid: number;
		GetType(): string { return 'Cmd.RoomEnterRoomCmd_C'; }
	}
	/**
	 * 单独回复给玩家
	 */
	export class RoomEnterRoomCmd_S {
		/**
		 * 返回码
		 */
		resultcode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 游戏状态
		 */
		roominfo: RoomStatusInfo;
		/**
		 * 房间总的下注信息
		 */
		roombet: Betbase[];
		/**
		 * 开奖历史
		 */
		lotteryhistory: Cmd.LotteryInfo[];
		/**
		 * 大小的开奖历史
		 */
		sizehistory: number[];
		/**
		 * 服务器统一下发图片id
		 */
		imageid: number;
		/**
		 * 货币（分）
		 */
		chips: string;
		/**
		 * 剩余的奖励金
		 */
		bounty: string;
		GetType(): string { return 'Cmd.RoomEnterRoomCmd_S'; }
	}
	/**
	 * 离开游戏
	 */
	export class RoomLeaveRoomCmd_C {
		/**
		 * 玩家deskid
		 */
		deskid: number;
		GetType(): string { return 'Cmd.RoomLeaveRoomCmd_C'; }
	}
	export class RoomLeaveRoomCmd_S {
		/**
		 * 返回码
		 */
		resultcode: number;
		/**
		 * 描述
		 */
		desc: string;
		trialcoin: number;
		goldcoin: number;
		// deskinfo: Cmd.DeskInfo[];
		GetType(): string { return 'Cmd.RoomLeaveRoomCmd_S'; }
	}
	export class RoomLeaveRoomCmd_Brd {
		uid: number;
		// deskinfo: Cmd.DeskInfo;
		GetType(): string { return 'Cmd.RoomLeaveRoomCmd_Brd'; }
	}
	/**
	 * 下注请求
	 */
	export class BetRequestRoomCmd_C {
		/**
		 * 下注信息
		 */
		betinfo: Betbase[];
		/**
		 * 当前筹码值
		 */
		chips: number;
		GetType(): string { return 'Cmd.BetRequestRoomCmd_C'; }
	}
	export class BetRequestRoomCmd_S {
		/**
		 * 返回码
		 */
		resultcode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 玩家本局所有下注信息
		 */
		betinfo: Betbase[];
		/**
		 * 下注后剩余金币
		 */
		remainder: number;
		GetType(): string { return 'Cmd.BetRequestRoomCmd_S'; }
	}
	/**
	 * 全压和撤销请求
	 */
	export class AllBetOrRepealRoomCmd_C {
		/**
		 * 1全压2撤销
		 */
		type: number;
		/**
		 * 当前筹码值
		 */
		chips: number;
		GetType(): string { return 'Cmd.AllBetOrRepealRoomCmd_C'; }
	}
	export class AllBetOrRepealRoomCmd_S {
		/**
		 * 返回码
		 */
		resultcode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 玩家本局所有下注信息
		 */
		betinfo: Betbase[];
		/**
		 * 下注后剩余金币
		 */
		remainder: number;
		GetType(): string { return 'Cmd.AllBetOrRepealRoomCmd_S'; }
	}
	/**
	 * 开始游戏
	 */
	export class StartGameRoomCmd_C {
		/**
		 * 下注信息
		 */
		betinfo: Betbase[];
		GetType(): string { return 'Cmd.StartGameRoomCmd_C'; }
	}
	export class StartGameRoomCmd_S {
		/**
		 * 返回码
		 */
		resultcode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 玩家本局所有下注信息
		 */
		betinfo: Betbase[];
		/**
		 * 当前金币
		 */
		remainder: number;
		/**
		 * 当前的奖励金
		 */
		remainbounty: number;
		GetType(): string { return 'Cmd.StartGameRoomCmd_S'; }
	}
	/**
	 * 压大小
	 */
	export class BetSizeRoomCmd_C {
		/**
		 * 0是小,1是大
		 */
		sizeid: number;
		GetType(): string { return 'Cmd.BetSizeRoomCmd_C'; }
	}
	export class BetSizeRoomCmd_S {
		/**
		 * 返回码
		 */
		resultcode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 开奖结果
		 */
		sizeid: number;
		/**
		 * 当前奖励金
		 */
		remainbounty: number;
		/**
		 * 当前金币
		 */
		remainder: number;
		GetType(): string { return 'Cmd.BetSizeRoomCmd_S'; }
	}
	/**
	 * 金币转换
	 */
	export class TrueGoldRoomCmd_C {
		/**
		 * 0是左,1是右
		 */
		sizeid: number;
		chips: number;
		GetType(): string { return 'Cmd.TrueGoldRoomCmd_C'; }
	}
	export class TrueGoldRoomCmd_S {
		/**
		 * 返回码
		 */
		resultcode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 剩余奖励金
		 */
		remainbounty: number;
		/**
		 * 剩余金币
		 */
		remainder: number;
		GetType(): string { return 'Cmd.TrueGoldRoomCmd_S'; }
	}
	/**
	 * 开奖广播
	 */
	export class LotteryRoomCmd_Brd {
		/**
		 * 房间ID
		 */
		roomid: number;
		/**
		 * 开奖结果
		 */
		lotteryroom: LotteryInfo;
		/**
		 * 本次下注结果信息
		 */
		betinfo: Betbase[];
		/**
		 * 奖励金
		 */
		remainbounty: number;
		/**
		 * 金币
		 */
		remainder: number;
		/**
		 * 特殊奖励的详情
		 */
		windetail: winbase[];
		/**
		 * 是否播中奖动画 0 不播 1 播
		 */
		animation: number;
		GetType(): string { return 'Cmd.LotteryRoomCmd_Brd'; }
	}
	/**
	 * 下注广播
	 */
	export class BetBeginRoomCmd_Brd {
		/**
		 * 房间ID
		 */
		roomid: number;
		GetType(): string { return 'Cmd.BetBeginRoomCmd_Brd'; }
	}
}
